<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="5" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-26T02:57:05 IST" name="Suite" finished-at="2025-10-26T02:57:27 IST" duration-ms="21306">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.LoginErrorValidation()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" name="LoginErrorValidation" class="ecom.tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
      <group name="purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" name="submitOrder" class="ecom.tests.SubmitOrderTest"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2025-10-26T02:57:05 IST" name="Validation Test" finished-at="2025-10-26T02:57:16 IST" duration-ms="10620">
      <class name="ecom.tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" started-at="2025-10-26T02:57:05 IST" name="launchApplication" finished-at="2025-10-26T02:57:10 IST" duration-ms="4779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" started-at="2025-10-26T02:57:10 IST" name="LoginErrorValidation" finished-at="2025-10-26T02:57:11 IST" duration-ms="971" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrec email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrec email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ecom.tests.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" started-at="2025-10-26T02:57:11 IST" name="tearDown" finished-at="2025-10-26T02:57:11 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" started-at="2025-10-26T02:57:11 IST" name="launchApplication" finished-at="2025-10-26T02:57:14 IST" duration-ms="2765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" started-at="2025-10-26T02:57:14 IST" name="LoginErrorValidation" finished-at="2025-10-26T02:57:15 IST" duration-ms="779" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrec email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrec email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ecom.tests.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.tests.ErrorValidationTest@7f284218]" started-at="2025-10-26T02:57:16 IST" name="tearDown" finished-at="2025-10-26T02:57:16 IST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ecom.tests.ErrorValidationTest -->
    </test> <!-- Validation Test -->
    <test started-at="2025-10-26T02:57:05 IST" name="SubmitOrder" finished-at="2025-10-26T02:57:27 IST" duration-ms="21306">
      <class name="ecom.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:06 IST" name="launchApplication" finished-at="2025-10-26T02:57:10 IST" duration-ms="4366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:10 IST" name="submitOrder" data-provider="getData" finished-at="2025-10-26T02:57:15 IST" duration-ms="4305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Function@1234, product=ZARA COAT 3, email=admingama@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:15 IST" name="tearDown" finished-at="2025-10-26T02:57:15 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:15 IST" name="launchApplication" finished-at="2025-10-26T02:57:18 IST" duration-ms="2796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:18 IST" name="submitOrder" data-provider="getData" finished-at="2025-10-26T02:57:22 IST" duration-ms="4361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pass=Network@1234, product=ADIDAS ORIGINAL, email=networkadmin@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:22 IST" name="tearDown" finished-at="2025-10-26T02:57:22 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:22 IST" name="launchApplication" finished-at="2025-10-26T02:57:25 IST" duration-ms="2758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:25 IST" name="orderHistoryTest" finished-at="2025-10-26T02:57:26 IST" depends-on-methods="submitOrder()" duration-ms="1381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.tests.SubmitOrderTest@32115b28]" started-at="2025-10-26T02:57:26 IST" name="tearDown" finished-at="2025-10-26T02:57:27 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ecom.tests.SubmitOrderTest -->
    </test> <!-- SubmitOrder -->
  </suite> <!-- Suite -->
</testng-results>
